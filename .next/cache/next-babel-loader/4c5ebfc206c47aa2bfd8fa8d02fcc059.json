{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diddi\\\\Documents\\\\crypto\\\\aave-liquidation\\\\pages\\\\settings.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Checkbox, Label } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport FileSaver from 'file-saver';\nimport web3 from '../src/web3.js';\n\nvar Settings = /*#__PURE__*/function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      liquidatorAddress: '',\n      addressToLiquidate: '',\n      collateralAddress: '',\n      repayTokenAddress: '',\n      lpAddressProviderAddress: '',\n      lpAddress: '',\n      latestLpCoreAddress: '',\n      wss: '',\n      http: '',\n      mnemonic: '',\n      ethGasStationAPIKey: '',\n      dynamicGasPrice: false,\n      liquidationAmount: '',\n      gasPrice: '',\n      gasLimit: '',\n      receiveATokens: false,\n      formError: false,\n      liquidatorAddressError: false,\n      addressToLiquidateError: false,\n      collateralAddressError: false,\n      repayTokenAddressError: false,\n      lpAddressProviderAddressError: false,\n      lpAddressError: false,\n      latestLpCoreAddressError: false,\n      wssError: false,\n      httpError: false,\n      mnemonicError: false,\n      ethGasStationAPIKeyError: false,\n      dynamicGasPriceError: false,\n      liquidationAmountError: false,\n      gasPriceError: false,\n      gasLimitError: false,\n      receiveAtokensError: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n      console.log(_this.state);\n      var error = false;\n      Object.keys(_this.state).map(function (key) {\n        if (key.endsWith('Address') || key == 'addressToLiquidate') {\n          var validAddress = !web3.web3.utils.checkAddressChecksum(_this.state[key]);\n          console.log(key + 'Error', validAddress);\n\n          _this.setState(_defineProperty({}, key + 'Error', validAddress));\n\n          error = true;\n        }\n      });\n\n      if (error) {\n        console.log('NOPE');\n\n        _this.setState({\n          formError: true\n        });\n\n        return;\n      }\n\n      var configFile = {\n        liquidatorAddress: _this.state.liquidatorAddress,\n        addressToLiquidate: _this.state.addressToLiquidate,\n        collateralAddress: _this.state.collateralAddress,\n        repayTokenAddress: _this.state.repayTokenAddress,\n        lpAddressProviderAddress: _this.state.lpAddressProviderAddress,\n        lpAddress: _this.state.lpAddress,\n        latestLpCoreAddress: _this.state.latestLpCoreAddress,\n        wss: _this.state.wss,\n        http: _this.state.http,\n        mnemonic: _this.state.mnemonic,\n        ethGasStationAPIKey: _this.state.ethGasStationAPIKey,\n        dynamicGasPrice: _this.state.dynamicGasPrice,\n        liquidationAmount: _this.state.liquidationAmount,\n        gasPrice: _this.state.gasPrice,\n        gasLimit: _this.state.gasLimit,\n        receiveATokens: _this.state.receiveATokens\n      };\n      var blob = new Blob([JSON.stringify(configFile)], {\n        type: 'application/json'\n      });\n      FileSaver.saveAs(blob, 'settings.json');\n\n      _this.updateSessionStorage(_this.state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hiddenFileInput\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadSettings\", function () {\n      _this.hiddenFileInput.current.click();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"readSettings\", function (event) {\n      var fileUploaded = event.target.files[0];\n      var fr = new FileReader();\n\n      fr.onload = function (e) {\n        var result = JSON.parse(e.target.result);\n\n        _this.setState({\n          liquidatorAddress: result.liquidatorAddress,\n          addressToLiquidate: result.addressToLiquidate,\n          collateralAddress: result.collateralAddress,\n          repayTokenAddress: result.repayTokenAddress,\n          lpAddressProviderAddress: result.lpAddressProviderAddress,\n          lpAddress: result.lpAddress,\n          latestLpCoreAddress: result.latestLpCoreAddress,\n          wss: result.wss,\n          http: result.http,\n          mnemonic: result.mnemonic,\n          ethGasStationAPIKey: result.ethGasStationAPIKey,\n          dynamicGasPrice: result.dynamicGasPrice,\n          liquidationAmount: result.liquidationAmount,\n          gasPrice: result.gasPrice,\n          gasLimit: result.gasLimit,\n          receiveATokens: result.receiveATokens\n        });\n\n        _this.updateSessionStorage(result);\n\n        var formatted = JSON.stringify(result, null, 2);\n        console.log(formatted);\n      };\n\n      fr.readAsText(fileUploaded);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSessionStorage\", function (data) {\n      sessionStorage.setItem('liquidatorAddress', data.liquidatorAddress);\n      sessionStorage.setItem('addressToLiquidate', data.addressToLiquidate);\n      sessionStorage.setItem('collateralAddress', data.collateralAddress);\n      sessionStorage.setItem('repayTokenAddress', data.repayTokenAddress);\n      sessionStorage.setItem('lpAddressProviderAddress', data.lpAddressProviderAddress);\n      sessionStorage.setItem('lpAddress', data.lpAddress);\n      sessionStorage.setItem('latestLpCoreAddress', data.latestLpCoreAddress);\n      sessionStorage.setItem('wss', data.wss);\n      sessionStorage.setItem('http', data.http);\n      sessionStorage.setItem('mnemonic', data.mnemonic);\n      sessionStorage.setItem('ethGasStationAPIKey', data.ethGasStationAPIKey);\n      sessionStorage.setItem('dynamicGasPrice', data.dynamicGasPrice);\n      sessionStorage.setItem('liquidationAmount', data.liquidationAmount);\n      sessionStorage.setItem('gasPrice', data.gasPrice);\n      sessionStorage.setItem('gasLimit', data.gasLimit);\n      sessionStorage.setItem('receiveATokens', data.receiveATokens);\n    });\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        liquidatorAddress: sessionStorage.getItem('liquidatorAddress'),\n        addressToLiquidate: sessionStorage.getItem('addressToLiquidate'),\n        collateralAddress: sessionStorage.getItem('collateralAddress'),\n        repayTokenAddress: sessionStorage.getItem('repayTokenAddress'),\n        lpAddressProviderAddress: sessionStorage.getItem('lpAddressProviderAddress'),\n        lpAddress: sessionStorage.getItem('lpAddress'),\n        latestLpCoreAddress: sessionStorage.getItem('latestLpCoreAddress'),\n        wss: sessionStorage.getItem('wss'),\n        http: sessionStorage.getItem('http'),\n        mnemonic: sessionStorage.getItem('mnemonic'),\n        ethGasStationAPIKey: sessionStorage.getItem('ethGasStationAPIKey'),\n        dynamicGasPrice: sessionStorage.getItem('dynamicGasPrice') == 'true',\n        liquidationAmount: sessionStorage.getItem('liquidationAmount'),\n        gasPrice: sessionStorage.getItem('gasPrice'),\n        gasLimit: sessionStorage.getItem('gasLimit'),\n        receiveATokens: sessionStorage.getItem('receiveATokens') == 'true'\n      });\n    } //add write to session storage onchange on the unputs\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.liquidationAddressError, 'RENDER');\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }\n      }, \"Liquidation Settings\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: this.state.formError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Liquidator Address\",\n        error: this.state.liquidatorAddressError ? {\n          content: 'Please enter a valid address'\n        } : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.liquidatorAddress,\n        onChange: function onChange(event) {\n          _this2.setState({\n            liquidatorAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Address To Liquidate\",\n        error: this.state.addressToLiquidateError ? {\n          content: 'Please enter a valid address'\n        } : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.addressToLiquidate,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            addressToLiquidate: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Collateral Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.collateralAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            collateralAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Repay Token Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.repayTokenAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            repayTokenAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"LendingPoolAddressProvider Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.lpAddressProviderAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            lpAddressProviderAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"LendingPool Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.lpAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            lpAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"LendingPoolCore Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.latestLpCoreAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            latestLpCoreAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Infura WSS Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.wss,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            wss: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Infura HTTP Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.http,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            http: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Wallet Mneumonic / Seed Phrase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"String\",\n        labelPosition: \"right\",\n        value: this.state.mnemonic,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            mnemonic: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Liquidation Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.liquidationAmount,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            liquidationAmount: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Gas Limit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"WEI\",\n        labelPosition: \"right\",\n        value: this.state.gasLimit,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            gasLimit: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"ETH GAS STATION API KEY\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"String\",\n        labelPosition: \"right\",\n        value: this.state.ethGasStationAPIKey,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            ethGasStationAPIKey: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Gas Price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"WEI\",\n        labelPosition: \"right\",\n        value: this.state.gasPrice,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            gasPrice: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Use Dynamic Gas Price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }\n      }, __jsx(Checkbox, {\n        toggle: true,\n        checked: this.state.dynamicGasPrice,\n        onChange: function onChange() {\n          return _this2.setState(function (_ref) {\n            var dynamicGasPrice = _ref.dynamicGasPrice;\n            return {\n              dynamicGasPrice: !dynamicGasPrice\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Receive Collateral as aTokens\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, __jsx(Checkbox, {\n        toggle: true,\n        checked: this.state.receiveATokens,\n        onChange: function onChange() {\n          return _this2.setState(function (_ref2) {\n            var receiveATokens = _ref2.receiveATokens;\n            return {\n              receiveATokens: !receiveATokens\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }\n      }))), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }\n      }), __jsx(Button, {\n        primary: true,\n        labelPosition: \"left\",\n        icon: \"download\",\n        content: \"Save\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }\n      }), __jsx(Button, {\n        type: \"button\",\n        content: \"Upload Settings\",\n        labelPosition: \"left\",\n        icon: \"file\",\n        onClick: this.uploadSettings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }\n      }), __jsx(\"input\", {\n        type: \"file\",\n        ref: this.hiddenFileInput,\n        onChange: this.readSettings,\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/Diddi/Documents/crypto/aave-liquidation/pages/settings.js"],"names":["React","Component","Form","Button","Input","Message","Checkbox","Label","Layout","FileSaver","web3","Settings","liquidatorAddress","addressToLiquidate","collateralAddress","repayTokenAddress","lpAddressProviderAddress","lpAddress","latestLpCoreAddress","wss","http","mnemonic","ethGasStationAPIKey","dynamicGasPrice","liquidationAmount","gasPrice","gasLimit","receiveATokens","formError","liquidatorAddressError","addressToLiquidateError","collateralAddressError","repayTokenAddressError","lpAddressProviderAddressError","lpAddressError","latestLpCoreAddressError","wssError","httpError","mnemonicError","ethGasStationAPIKeyError","dynamicGasPriceError","liquidationAmountError","gasPriceError","gasLimitError","receiveAtokensError","event","preventDefault","console","log","state","error","Object","keys","map","key","endsWith","validAddress","utils","checkAddressChecksum","setState","configFile","blob","Blob","JSON","stringify","type","saveAs","updateSessionStorage","createRef","hiddenFileInput","current","click","fileUploaded","target","files","fr","FileReader","onload","e","result","parse","formatted","readAsText","data","sessionStorage","setItem","getItem","liquidationAddressError","onSubmit","content","value","errorMessage","uploadSettings","readSettings","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Message,\r\n  Checkbox,\r\n  Label,\r\n} from 'semantic-ui-react'\r\nimport Layout from '../components/Layout'\r\nimport FileSaver from 'file-saver'\r\nimport web3 from '../src/web3.js'\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    liquidatorAddress: '',\r\n    addressToLiquidate: '',\r\n    collateralAddress: '',\r\n    repayTokenAddress: '',\r\n    lpAddressProviderAddress: '',\r\n    lpAddress: '',\r\n    latestLpCoreAddress: '',\r\n    wss: '',\r\n    http: '',\r\n    mnemonic: '',\r\n    ethGasStationAPIKey: '',\r\n    dynamicGasPrice: false,\r\n    liquidationAmount: '',\r\n    gasPrice: '',\r\n    gasLimit: '',\r\n    receiveATokens: false,\r\n    formError: false,\r\n    liquidatorAddressError: false,\r\n    addressToLiquidateError: false,\r\n    collateralAddressError: false,\r\n    repayTokenAddressError: false,\r\n    lpAddressProviderAddressError: false,\r\n    lpAddressError: false,\r\n    latestLpCoreAddressError: false,\r\n    wssError: false,\r\n    httpError: false,\r\n    mnemonicError: false,\r\n    ethGasStationAPIKeyError: false,\r\n    dynamicGasPriceError: false,\r\n    liquidationAmountError: false,\r\n    gasPriceError: false,\r\n    gasLimitError: false,\r\n    receiveAtokensError: false,\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault()\r\n    console.log(this.state)\r\n\r\n    let error = false\r\n\r\n    Object.keys(this.state).map((key) => {\r\n      if (key.endsWith('Address') || key == 'addressToLiquidate') {\r\n        var validAddress = !web3.web3.utils.checkAddressChecksum(\r\n          this.state[key]\r\n        )\r\n\r\n        console.log(key + 'Error', validAddress)\r\n        this.setState({ [key + 'Error']: validAddress })\r\n\r\n        error = true\r\n      }\r\n    })\r\n\r\n    if (error) {\r\n      console.log('NOPE')\r\n      this.setState({ formError: true })\r\n      return\r\n    }\r\n\r\n    var configFile = {\r\n      liquidatorAddress: this.state.liquidatorAddress,\r\n      addressToLiquidate: this.state.addressToLiquidate,\r\n      collateralAddress: this.state.collateralAddress,\r\n      repayTokenAddress: this.state.repayTokenAddress,\r\n      lpAddressProviderAddress: this.state.lpAddressProviderAddress,\r\n      lpAddress: this.state.lpAddress,\r\n      latestLpCoreAddress: this.state.latestLpCoreAddress,\r\n      wss: this.state.wss,\r\n      http: this.state.http,\r\n      mnemonic: this.state.mnemonic,\r\n      ethGasStationAPIKey: this.state.ethGasStationAPIKey,\r\n      dynamicGasPrice: this.state.dynamicGasPrice,\r\n      liquidationAmount: this.state.liquidationAmount,\r\n      gasPrice: this.state.gasPrice,\r\n      gasLimit: this.state.gasLimit,\r\n      receiveATokens: this.state.receiveATokens,\r\n    }\r\n    var blob = new Blob([JSON.stringify(configFile)], {\r\n      type: 'application/json',\r\n    })\r\n    FileSaver.saveAs(blob, 'settings.json')\r\n    this.updateSessionStorage(this.state)\r\n  }\r\n\r\n  hiddenFileInput = React.createRef()\r\n  uploadSettings = () => {\r\n    this.hiddenFileInput.current.click()\r\n  }\r\n  readSettings = (event) => {\r\n    var fileUploaded = event.target.files[0]\r\n    var fr = new FileReader()\r\n    fr.onload = (e) => {\r\n      var result = JSON.parse(e.target.result)\r\n\r\n      this.setState({\r\n        liquidatorAddress: result.liquidatorAddress,\r\n        addressToLiquidate: result.addressToLiquidate,\r\n        collateralAddress: result.collateralAddress,\r\n        repayTokenAddress: result.repayTokenAddress,\r\n        lpAddressProviderAddress: result.lpAddressProviderAddress,\r\n        lpAddress: result.lpAddress,\r\n        latestLpCoreAddress: result.latestLpCoreAddress,\r\n        wss: result.wss,\r\n        http: result.http,\r\n        mnemonic: result.mnemonic,\r\n        ethGasStationAPIKey: result.ethGasStationAPIKey,\r\n        dynamicGasPrice: result.dynamicGasPrice,\r\n        liquidationAmount: result.liquidationAmount,\r\n        gasPrice: result.gasPrice,\r\n        gasLimit: result.gasLimit,\r\n        receiveATokens: result.receiveATokens,\r\n      })\r\n      this.updateSessionStorage(result)\r\n      var formatted = JSON.stringify(result, null, 2)\r\n      console.log(formatted)\r\n    }\r\n\r\n    fr.readAsText(fileUploaded)\r\n  }\r\n\r\n  updateSessionStorage = (data) => {\r\n    sessionStorage.setItem('liquidatorAddress', data.liquidatorAddress)\r\n    sessionStorage.setItem('addressToLiquidate', data.addressToLiquidate)\r\n    sessionStorage.setItem('collateralAddress', data.collateralAddress)\r\n    sessionStorage.setItem('repayTokenAddress', data.repayTokenAddress)\r\n    sessionStorage.setItem(\r\n      'lpAddressProviderAddress',\r\n      data.lpAddressProviderAddress\r\n    )\r\n    sessionStorage.setItem('lpAddress', data.lpAddress)\r\n    sessionStorage.setItem('latestLpCoreAddress', data.latestLpCoreAddress)\r\n    sessionStorage.setItem('wss', data.wss)\r\n    sessionStorage.setItem('http', data.http)\r\n    sessionStorage.setItem('mnemonic', data.mnemonic)\r\n    sessionStorage.setItem('ethGasStationAPIKey', data.ethGasStationAPIKey)\r\n    sessionStorage.setItem('dynamicGasPrice', data.dynamicGasPrice)\r\n    sessionStorage.setItem('liquidationAmount', data.liquidationAmount)\r\n    sessionStorage.setItem('gasPrice', data.gasPrice)\r\n    sessionStorage.setItem('gasLimit', data.gasLimit)\r\n    sessionStorage.setItem('receiveATokens', data.receiveATokens)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      liquidatorAddress: sessionStorage.getItem('liquidatorAddress'),\r\n      addressToLiquidate: sessionStorage.getItem('addressToLiquidate'),\r\n      collateralAddress: sessionStorage.getItem('collateralAddress'),\r\n      repayTokenAddress: sessionStorage.getItem('repayTokenAddress'),\r\n      lpAddressProviderAddress: sessionStorage.getItem(\r\n        'lpAddressProviderAddress'\r\n      ),\r\n      lpAddress: sessionStorage.getItem('lpAddress'),\r\n      latestLpCoreAddress: sessionStorage.getItem('latestLpCoreAddress'),\r\n      wss: sessionStorage.getItem('wss'),\r\n      http: sessionStorage.getItem('http'),\r\n      mnemonic: sessionStorage.getItem('mnemonic'),\r\n      ethGasStationAPIKey: sessionStorage.getItem('ethGasStationAPIKey'),\r\n      dynamicGasPrice: sessionStorage.getItem('dynamicGasPrice') == 'true',\r\n      liquidationAmount: sessionStorage.getItem('liquidationAmount'),\r\n      gasPrice: sessionStorage.getItem('gasPrice'),\r\n      gasLimit: sessionStorage.getItem('gasLimit'),\r\n      receiveATokens: sessionStorage.getItem('receiveATokens') == 'true',\r\n    })\r\n  }\r\n  //add write to session storage onchange on the unputs\r\n  render() {\r\n    console.log(this.state.liquidationAddressError, 'RENDER')\r\n    return (\r\n      <Layout>\r\n        <h1>Liquidation Settings</h1>\r\n        <Form onSubmit={this.onSubmit} error={this.state.formError}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input\r\n              label=\"Liquidator Address\"\r\n              error={\r\n                this.state.liquidatorAddressError\r\n                  ? { content: 'Please enter a valid address' }\r\n                  : false\r\n              }\r\n            >\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.liquidatorAddress}\r\n                onChange={(event) => {\r\n                  this.setState({ liquidatorAddress: event.target.value })\r\n                }}\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input\r\n              label=\"Address To Liquidate\"\r\n              error={\r\n                this.state.addressToLiquidateError\r\n                  ? { content: 'Please enter a valid address' }\r\n                  : false\r\n              }\r\n            >\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.addressToLiquidate}\r\n                onChange={(event) =>\r\n                  this.setState({ addressToLiquidate: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Collateral Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.collateralAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ collateralAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Repay Token Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.repayTokenAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ repayTokenAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"LendingPoolAddressProvider Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.lpAddressProviderAddress}\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    lpAddressProviderAddress: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"LendingPool Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.lpAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ lpAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"LendingPoolCore Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.latestLpCoreAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ latestLpCoreAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Infura WSS Address\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.wss}\r\n                onChange={(event) => this.setState({ wss: event.target.value })}\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Infura HTTP Address\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.http}\r\n                onChange={(event) =>\r\n                  this.setState({ http: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Wallet Mneumonic / Seed Phrase\">\r\n              <Input\r\n                label=\"String\"\r\n                labelPosition=\"right\"\r\n                value={this.state.mnemonic}\r\n                onChange={(event) =>\r\n                  this.setState({ mnemonic: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Liquidation Amount\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.liquidationAmount}\r\n                onChange={(event) =>\r\n                  this.setState({ liquidationAmount: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n            <Form.Input label=\"Gas Limit\">\r\n              <Input\r\n                label=\"WEI\"\r\n                labelPosition=\"right\"\r\n                value={this.state.gasLimit}\r\n                onChange={(event) =>\r\n                  this.setState({ gasLimit: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"ETH GAS STATION API KEY\">\r\n              <Input\r\n                label=\"String\"\r\n                labelPosition=\"right\"\r\n                value={this.state.ethGasStationAPIKey}\r\n                onChange={(event) =>\r\n                  this.setState({ ethGasStationAPIKey: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Gas Price\">\r\n              <Input\r\n                label=\"WEI\"\r\n                labelPosition=\"right\"\r\n                value={this.state.gasPrice}\r\n                onChange={(event) =>\r\n                  this.setState({ gasPrice: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input label=\"Use Dynamic Gas Price\">\r\n              <Checkbox\r\n                toggle\r\n                checked={this.state.dynamicGasPrice}\r\n                onChange={() =>\r\n                  this.setState(({ dynamicGasPrice }) => ({\r\n                    dynamicGasPrice: !dynamicGasPrice,\r\n                  }))\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Receive Collateral as aTokens\">\r\n              <Checkbox\r\n                toggle\r\n                checked={this.state.receiveATokens}\r\n                onChange={() =>\r\n                  this.setState(({ receiveATokens }) => ({\r\n                    receiveATokens: !receiveATokens,\r\n                  }))\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n          <Button primary labelPosition=\"left\" icon=\"download\" content=\"Save\" />\r\n\r\n          <Button\r\n            type=\"button\"\r\n            content=\"Upload Settings\"\r\n            labelPosition=\"left\"\r\n            icon=\"file\"\r\n            onClick={this.uploadSettings}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            ref={this.hiddenFileInput}\r\n            onChange={this.readSettings}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </Form>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n"]},"metadata":{},"sourceType":"module"}