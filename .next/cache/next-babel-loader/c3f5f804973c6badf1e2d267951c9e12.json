{"ast":null,"code":"const Web3 = require('web3');\n\nconst config = require('../config.json');\n\nconst HDWalletProvider = require('@truffle/hdwallet-provider');\n\nconst network = setNetwork();\n\nfunction setNetwork() {\n  return process.argv[2] == 'mainnet' ? 'mainnet' : 'ropsten';\n}\n\nconst OPTIONS = {\n  defaultBlock: 'latest',\n  transactionConfirmationBlocks: 1,\n  transactionBlockTimeout: 5\n};\nlet web3;\n\nif (false && typeof window.web3 !== 'undefined') {\n  // In browser and metamask is running\n  console.log(Date.now, 'BRO');\n  web3 = new Web3(window.ethereum, null, OPTIONS);\n  console.log(web3);\n  window.ethereum.enable();\n} else {\n  console.log(Date.now);\n  const walletProvider = new HDWalletProvider(config[network].mnemonic, config[network].http);\n  web3 = new Web3(walletProvider);\n}\n\nconst webSocketProvider = new Web3.providers.WebsocketProvider(config[network].wss);\nconst web3wss = new Web3(webSocketProvider);\nmodule.exports = {\n  web3: web3,\n  web3wss: web3wss,\n  network: network\n};","map":{"version":3,"sources":["C:/Users/Diddi/Documents/crypto/aave-liquidation/src/web3.js"],"names":["Web3","require","config","HDWalletProvider","network","setNetwork","process","argv","OPTIONS","defaultBlock","transactionConfirmationBlocks","transactionBlockTimeout","web3","window","console","log","Date","now","ethereum","enable","walletProvider","mnemonic","http","webSocketProvider","providers","WebsocketProvider","wss","web3wss","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,4BAAD,CAAhC;;AAEA,MAAMG,OAAO,GAAGC,UAAU,EAA1B;;AAEA,SAASA,UAAT,GAAsB;AACpB,SAAOC,OAAO,CAACC,IAAR,CAAa,CAAb,KAAmB,SAAnB,GAA+B,SAA/B,GAA2C,SAAlD;AACD;;AAED,MAAMC,OAAO,GAAG;AACdC,EAAAA,YAAY,EAAE,QADA;AAEdC,EAAAA,6BAA6B,EAAE,CAFjB;AAGdC,EAAAA,uBAAuB,EAAE;AAHX,CAAhB;AAMA,IAAIC,IAAJ;;AAEA,IAAI,SAAiC,OAAOC,MAAM,CAACD,IAAd,KAAuB,WAA5D,EAAyE;AACvE;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,GAAjB,EAAsB,KAAtB;AACAL,EAAAA,IAAI,GAAG,IAAIZ,IAAJ,CAASa,MAAM,CAACK,QAAhB,EAA0B,IAA1B,EAAgCV,OAAhC,CAAP;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,EAAAA,MAAM,CAACK,QAAP,CAAgBC,MAAhB;AACD,CAND,MAMO;AACLL,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,GAAjB;AACA,QAAMG,cAAc,GAAG,IAAIjB,gBAAJ,CACrBD,MAAM,CAACE,OAAD,CAAN,CAAgBiB,QADK,EAErBnB,MAAM,CAACE,OAAD,CAAN,CAAgBkB,IAFK,CAAvB;AAIAV,EAAAA,IAAI,GAAG,IAAIZ,IAAJ,CAASoB,cAAT,CAAP;AACD;;AAED,MAAMG,iBAAiB,GAAG,IAAIvB,IAAI,CAACwB,SAAL,CAAeC,iBAAnB,CACxBvB,MAAM,CAACE,OAAD,CAAN,CAAgBsB,GADQ,CAA1B;AAGA,MAAMC,OAAO,GAAG,IAAI3B,IAAJ,CAASuB,iBAAT,CAAhB;AAEAK,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,IAAI,EAAEA,IADS;AAEfe,EAAAA,OAAO,EAAEA,OAFM;AAGfvB,EAAAA,OAAO,EAAEA;AAHM,CAAjB","sourcesContent":["const Web3 = require('web3')\r\nconst config = require('../config.json')\r\nconst HDWalletProvider = require('@truffle/hdwallet-provider')\r\n\r\nconst network = setNetwork()\r\n\r\nfunction setNetwork() {\r\n  return process.argv[2] == 'mainnet' ? 'mainnet' : 'ropsten'\r\n}\r\n\r\nconst OPTIONS = {\r\n  defaultBlock: 'latest',\r\n  transactionConfirmationBlocks: 1,\r\n  transactionBlockTimeout: 5,\r\n}\r\n\r\nlet web3\r\n\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n  // In browser and metamask is running\r\n  console.log(Date.now, 'BRO')\r\n  web3 = new Web3(window.ethereum, null, OPTIONS)\r\n  console.log(web3)\r\n  window.ethereum.enable()\r\n} else {\r\n  console.log(Date.now)\r\n  const walletProvider = new HDWalletProvider(\r\n    config[network].mnemonic,\r\n    config[network].http\r\n  )\r\n  web3 = new Web3(walletProvider)\r\n}\r\n\r\nconst webSocketProvider = new Web3.providers.WebsocketProvider(\r\n  config[network].wss\r\n)\r\nconst web3wss = new Web3(webSocketProvider)\r\n\r\nmodule.exports = {\r\n  web3: web3,\r\n  web3wss: web3wss,\r\n  network: network,\r\n}\r\n"]},"metadata":{},"sourceType":"script"}