{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diddi\\\\Documents\\\\crypto\\\\aave-liquidation\\\\pages\\\\settings.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Checkbox } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport FileSaver from 'file-saver';\nimport { network } from '../src/web3.js';\nimport config from '../config.json';\nvar CONFIG_FILE_PATH = './config.json';\n\nvar Settings = /*#__PURE__*/function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      liquidatorAddress: config[network].liquidatorAddress,\n      addressToLiquidate: config[network].addressToLiquidate,\n      collateralAddress: config[network].collateralAddress,\n      repayTokenAddress: config[network].repayTokenAddress,\n      lpAddressProviderAddress: config[network].lpAddressProviderAddress,\n      lpAddress: config[network].lpAddress,\n      latestLpCoreAddress: config[network].latestLpCoreAddress,\n      wss: config[network].wss,\n      http: config[network].http,\n      mnemonic: config[network].mnemonic,\n      ethGasStationAPIKey: config[network].ethGasStationAPIKey,\n      dynamicGasPrice: config[network].dynamicGasPrice,\n      liquidationAmount: config[network].liquidationAmount,\n      gasPrice: config[network].gasPrice,\n      gasLimit: config[network].gasLimit,\n      receiveATokens: config[network].receiveATokens,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var configFile, blob;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                console.log(_this.state);\n                configFile = {\n                  liquidatorAddress: _this.state.liquidatorAddress,\n                  addressToLiquidate: _this.state.addressToLiquidate,\n                  collateralAddress: _this.state.collateralAddress,\n                  repayTokenAddress: _this.state.repayTokenAddress,\n                  lpAddressProviderAddress: _this.state.lpAddressProviderAddress,\n                  lpAddress: _this.state.lpAddress,\n                  latestLpCoreAddress: _this.state.latestLpCoreAddress,\n                  wss: _this.state.wss,\n                  http: _this.state.http,\n                  mnemonic: _this.state.mnemonic,\n                  ethGasStationAPIKey: _this.state.ethGasStationAPIKey,\n                  dynamicGasPrice: _this.state.dynamicGasPrice,\n                  liquidationAmount: _this.state.liquidationAmount,\n                  gasPrice: _this.state.gasPrice,\n                  gasLimit: _this.state.gasLimit,\n                  receiveATokens: _this.state.receiveATokens\n                };\n                blob = new Blob([JSON.stringify(configFile)], {\n                  type: 'application/json'\n                });\n                FileSaver.saveAs(blob, 'settings.json');\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"This is the Settings Screen\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Liquidator Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.liquidatorAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            liquidatorAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Address To Liquidate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.addressToLiquidate,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            addressToLiquidate: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Collateral Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.collateralAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            collateralAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Repay Token Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.repayTokenAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            repayTokenAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"LendingPoolAddressProvider Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.lpAddressProviderAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            lpAddressProviderAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"LendingPool Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.lpAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            lpAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"LendingPoolCore Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.latestLpCoreAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            latestLpCoreAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Infura WSS Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.wss,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            wss: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Infura HTTP Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.http,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            http: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Wallet Mneumonic / Seed Phrase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"String\",\n        labelPosition: \"right\",\n        value: this.state.mnemonic,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            mnemonic: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Liquidation Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.liquidationAmount,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            liquidationAmount: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Gas Limit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"WEI\",\n        labelPosition: \"right\",\n        value: this.state.gasLimit,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            gasLimit: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"ETH GAS STATION API KEY\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"String\",\n        labelPosition: \"right\",\n        value: this.state.ethGasStationAPIKey,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            ethGasStationAPIKey: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Gas Price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"WEI\",\n        labelPosition: \"right\",\n        value: this.state.gasPrice,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            gasPrice: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Use Dynamic Gas Price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, __jsx(Checkbox, {\n        toggle: true,\n        checked: this.state.dynamicGasPrice,\n        onChange: function onChange() {\n          return _this2.setState(function (_ref2) {\n            var dynamicGasPrice = _ref2.dynamicGasPrice;\n            return {\n              dynamicGasPrice: !dynamicGasPrice\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Receive Collateral as aTokens\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, __jsx(Checkbox, {\n        toggle: true,\n        checked: this.state.receiveATokens,\n        onChange: function onChange() {\n          return _this2.setState(function (_ref3) {\n            var receiveATokens = _ref3.receiveATokens;\n            return {\n              receiveATokens: !receiveATokens\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }))), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }), __jsx(Button, {\n        secondary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }\n      }, \"Save\"), __jsx(Button, {\n        primary: true,\n        type: \"button\",\n        onClick: this.state.uploadSettings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      }, \"Upload\")));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/Diddi/Documents/crypto/aave-liquidation/pages/settings.js"],"names":["React","Component","Form","Button","Input","Message","Checkbox","Layout","FileSaver","network","config","CONFIG_FILE_PATH","Settings","liquidatorAddress","addressToLiquidate","collateralAddress","repayTokenAddress","lpAddressProviderAddress","lpAddress","latestLpCoreAddress","wss","http","mnemonic","ethGasStationAPIKey","dynamicGasPrice","liquidationAmount","gasPrice","gasLimit","receiveATokens","errorMessage","event","preventDefault","console","log","state","configFile","blob","Blob","JSON","stringify","type","saveAs","onSubmit","setState","target","value","uploadSettings"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Button, Input, Message, Checkbox } from 'semantic-ui-react'\r\nimport Layout from '../components/Layout'\r\nimport FileSaver from 'file-saver'\r\nimport { network } from '../src/web3.js'\r\nimport config from '../config.json'\r\n\r\nconst CONFIG_FILE_PATH = './config.json'\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    liquidatorAddress: config[network].liquidatorAddress,\r\n    addressToLiquidate: config[network].addressToLiquidate,\r\n    collateralAddress: config[network].collateralAddress,\r\n    repayTokenAddress: config[network].repayTokenAddress,\r\n    lpAddressProviderAddress: config[network].lpAddressProviderAddress,\r\n    lpAddress: config[network].lpAddress,\r\n    latestLpCoreAddress: config[network].latestLpCoreAddress,\r\n    wss: config[network].wss,\r\n    http: config[network].http,\r\n    mnemonic: config[network].mnemonic,\r\n    ethGasStationAPIKey: config[network].ethGasStationAPIKey,\r\n    dynamicGasPrice: config[network].dynamicGasPrice,\r\n    liquidationAmount: config[network].liquidationAmount,\r\n    gasPrice: config[network].gasPrice,\r\n    gasLimit: config[network].gasLimit,\r\n    receiveATokens: config[network].receiveATokens,\r\n    errorMessage: '',\r\n  }\r\n\r\n  onSubmit = async (event) => {\r\n    event.preventDefault()\r\n    console.log(this.state)\r\n\r\n    var configFile = {\r\n      liquidatorAddress: this.state.liquidatorAddress,\r\n      addressToLiquidate: this.state.addressToLiquidate,\r\n      collateralAddress: this.state.collateralAddress,\r\n      repayTokenAddress: this.state.repayTokenAddress,\r\n      lpAddressProviderAddress: this.state.lpAddressProviderAddress,\r\n      lpAddress: this.state.lpAddress,\r\n      latestLpCoreAddress: this.state.latestLpCoreAddress,\r\n      wss: this.state.wss,\r\n      http: this.state.http,\r\n      mnemonic: this.state.mnemonic,\r\n      ethGasStationAPIKey: this.state.ethGasStationAPIKey,\r\n      dynamicGasPrice: this.state.dynamicGasPrice,\r\n      liquidationAmount: this.state.liquidationAmount,\r\n      gasPrice: this.state.gasPrice,\r\n      gasLimit: this.state.gasLimit,\r\n      receiveATokens: this.state.receiveATokens,\r\n    }\r\n    var blob = new Blob([JSON.stringify(configFile)], {\r\n      type: 'application/json',\r\n    })\r\n    FileSaver.saveAs(blob, 'settings.json')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h1>This is the Settings Screen</h1>\r\n\r\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Liquidator Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.liquidatorAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ liquidatorAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Address To Liquidate\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.addressToLiquidate}\r\n                onChange={(event) =>\r\n                  this.setState({ addressToLiquidate: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Collateral Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.collateralAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ collateralAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Repay Token Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.repayTokenAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ repayTokenAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"LendingPoolAddressProvider Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.lpAddressProviderAddress}\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    lpAddressProviderAddress: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"LendingPool Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.lpAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ lpAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"LendingPoolCore Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.latestLpCoreAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ latestLpCoreAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Infura WSS Address\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.wss}\r\n                onChange={(event) => this.setState({ wss: event.target.value })}\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Infura HTTP Address\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.http}\r\n                onChange={(event) =>\r\n                  this.setState({ http: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Wallet Mneumonic / Seed Phrase\">\r\n              <Input\r\n                label=\"String\"\r\n                labelPosition=\"right\"\r\n                value={this.state.mnemonic}\r\n                onChange={(event) =>\r\n                  this.setState({ mnemonic: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Liquidation Amount\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.liquidationAmount}\r\n                onChange={(event) =>\r\n                  this.setState({ liquidationAmount: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n            <Form.Input label=\"Gas Limit\">\r\n              <Input\r\n                label=\"WEI\"\r\n                labelPosition=\"right\"\r\n                value={this.state.gasLimit}\r\n                onChange={(event) =>\r\n                  this.setState({ gasLimit: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"ETH GAS STATION API KEY\">\r\n              <Input\r\n                label=\"String\"\r\n                labelPosition=\"right\"\r\n                value={this.state.ethGasStationAPIKey}\r\n                onChange={(event) =>\r\n                  this.setState({ ethGasStationAPIKey: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Gas Price\">\r\n              <Input\r\n                label=\"WEI\"\r\n                labelPosition=\"right\"\r\n                value={this.state.gasPrice}\r\n                onChange={(event) =>\r\n                  this.setState({ gasPrice: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input label=\"Use Dynamic Gas Price\">\r\n              <Checkbox\r\n                toggle\r\n                checked={this.state.dynamicGasPrice}\r\n                onChange={() =>\r\n                  this.setState(({ dynamicGasPrice }) => ({\r\n                    dynamicGasPrice: !dynamicGasPrice,\r\n                  }))\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Receive Collateral as aTokens\">\r\n              <Checkbox\r\n                toggle\r\n                checked={this.state.receiveATokens}\r\n                onChange={() =>\r\n                  this.setState(({ receiveATokens }) => ({\r\n                    receiveATokens: !receiveATokens,\r\n                  }))\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n          <Button secondary>Save</Button>\r\n          <Button primary type=\"button\" onClick={this.state.uploadSettings}>\r\n            Upload\r\n          </Button>\r\n        </Form>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n"]},"metadata":{},"sourceType":"module"}