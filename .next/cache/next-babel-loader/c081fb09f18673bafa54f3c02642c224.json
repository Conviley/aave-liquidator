{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Diddi\\\\Documents\\\\crypto\\\\aave-liquidation\\\\pages\\\\settings.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Checkbox } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport FileSaver from 'file-saver';\n\nvar Settings = /*#__PURE__*/function (_Component) {\n  _inherits(Settings, _Component);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      liquidatorAddress: '',\n      addressToLiquidate: '',\n      collateralAddress: '',\n      repayTokenAddress: '',\n      lpAddressProviderAddress: '',\n      lpAddress: '',\n      latestLpCoreAddress: '',\n      wss: '',\n      http: '',\n      mnemonic: '',\n      ethGasStationAPIKey: '',\n      dynamicGasPrice: false,\n      liquidationAmount: '',\n      gasPrice: '',\n      gasLimit: '',\n      receiveATokens: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function (event) {\n      event.preventDefault();\n      console.log(_this.state);\n      var configFile = {\n        liquidatorAddress: _this.state.liquidatorAddress,\n        addressToLiquidate: _this.state.addressToLiquidate,\n        collateralAddress: _this.state.collateralAddress,\n        repayTokenAddress: _this.state.repayTokenAddress,\n        lpAddressProviderAddress: _this.state.lpAddressProviderAddress,\n        lpAddress: _this.state.lpAddress,\n        latestLpCoreAddress: _this.state.latestLpCoreAddress,\n        wss: _this.state.wss,\n        http: _this.state.http,\n        mnemonic: _this.state.mnemonic,\n        ethGasStationAPIKey: _this.state.ethGasStationAPIKey,\n        dynamicGasPrice: _this.state.dynamicGasPrice,\n        liquidationAmount: _this.state.liquidationAmount,\n        gasPrice: _this.state.gasPrice,\n        gasLimit: _this.state.gasLimit,\n        receiveATokens: _this.state.receiveATokens\n      };\n      var blob = new Blob([JSON.stringify(configFile)], {\n        type: 'application/json'\n      });\n      FileSaver.saveAs(blob, 'settings.json');\n\n      _this.updateSessionStorage(_this.state);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hiddenFileInput\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadSettings\", function () {\n      _this.hiddenFileInput.current.click();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"readSettings\", function (event) {\n      var fileUploaded = event.target.files[0];\n      var fr = new FileReader();\n\n      fr.onload = function (e) {\n        var result = JSON.parse(e.target.result);\n\n        _this.setState({\n          liquidatorAddress: result.liquidatorAddress,\n          addressToLiquidate: result.addressToLiquidate,\n          collateralAddress: result.collateralAddress,\n          repayTokenAddress: result.repayTokenAddress,\n          lpAddressProviderAddress: result.lpAddressProviderAddress,\n          lpAddress: result.lpAddress,\n          latestLpCoreAddress: result.latestLpCoreAddress,\n          wss: result.wss,\n          http: result.http,\n          mnemonic: result.mnemonic,\n          ethGasStationAPIKey: result.ethGasStationAPIKey,\n          dynamicGasPrice: result.dynamicGasPrice,\n          liquidationAmount: result.liquidationAmount,\n          gasPrice: result.gasPrice,\n          gasLimit: result.gasLimit,\n          receiveATokens: result.receiveATokens\n        });\n\n        _this.updateSessionStorage(result);\n\n        var formatted = JSON.stringify(result, null, 2);\n        console.log(formatted);\n      };\n\n      fr.readAsText(fileUploaded);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSessionStorage\", function (data) {\n      sessionStorage.setItem('liquidatorAddress', data.liquidatorAddress);\n      sessionStorage.setItem('addressToLiquidate', data.addressToLiquidate);\n      sessionStorage.setItem('collateralAddress', data.collateralAddress);\n      sessionStorage.setItem('repayTokenAddress', data.repayTokenAddress);\n      sessionStorage.setItem('lpAddressProviderAddress', data.lpAddressProviderAddress);\n      sessionStorage.setItem('lpAddress', data.lpAddress);\n      sessionStorage.setItem('latestLpCoreAddress', data.latestLpCoreAddress);\n      sessionStorage.setItem('wss', data.wss);\n      sessionStorage.setItem('http', data.http);\n      sessionStorage.setItem('mnemonic', data.mnemonic);\n      sessionStorage.setItem('ethGasStationAPIKey', data.ethGasStationAPIKey);\n      sessionStorage.setItem('dynamicGasPrice', data.dynamicGasPrice);\n      sessionStorage.setItem('liquidationAmount', data.liquidationAmount);\n      sessionStorage.setItem('gasPrice', data.gasPrice);\n      sessionStorage.setItem('gasLimit', data.gasLimit);\n      sessionStorage.setItem('receiveATokens', data.receiveATokens);\n    });\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('MOUNTED YAI');\n      this.setState({\n        liquidatorAddress: sessionStorage.getItem('liquidatorAddress'),\n        addressToLiquidate: sessionStorage.getItem('addressToLiquidate'),\n        collateralAddress: sessionStorage.getItem('collateralAddress'),\n        repayTokenAddress: sessionStorage.getItem('repayTokenAddress'),\n        lpAddressProviderAddress: sessionStorage.getItem('lpAddressProviderAddress'),\n        lpAddress: sessionStorage.getItem('lpAddress'),\n        latestLpCoreAddress: sessionStorage.getItem('latestLpCoreAddress'),\n        wss: sessionStorage.getItem('wss'),\n        http: sessionStorage.getItem('http'),\n        mnemonic: sessionStorage.getItem('mnemonic'),\n        ethGasStationAPIKey: sessionStorage.getItem('ethGasStationAPIKey'),\n        dynamicGasPrice: sessionStorage.getItem('dynamicGasPrice') == 'true',\n        liquidationAmount: sessionStorage.getItem('liquidationAmount'),\n        gasPrice: sessionStorage.getItem('gasPrice'),\n        gasLimit: sessionStorage.getItem('gasLimit'),\n        receiveATokens: sessionStorage.getItem('receiveATokens') == 'true'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, \"Liquidation Settings\"), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Liquidator Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        error: true,\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.liquidatorAddress,\n        onChange: function onChange(event) {\n          _this2.setState({\n            liquidatorAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Address To Liquidate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.addressToLiquidate,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            addressToLiquidate: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Collateral Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.collateralAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            collateralAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Repay Token Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.repayTokenAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            repayTokenAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"LendingPoolAddressProvider Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.lpAddressProviderAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            lpAddressProviderAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"LendingPool Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.lpAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            lpAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"LendingPoolCore Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"HEX\",\n        labelPosition: \"right\",\n        value: this.state.latestLpCoreAddress,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            latestLpCoreAddress: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Infura WSS Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.wss,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            wss: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Infura HTTP Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.http,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            http: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Wallet Mneumonic / Seed Phrase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"String\",\n        labelPosition: \"right\",\n        value: this.state.mnemonic,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            mnemonic: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Liquidation Amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"URL\",\n        labelPosition: \"right\",\n        value: this.state.liquidationAmount,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            liquidationAmount: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Gas Limit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"WEI\",\n        labelPosition: \"right\",\n        value: this.state.gasLimit,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            gasLimit: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        widths: \"equal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"ETH GAS STATION API KEY\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"String\",\n        labelPosition: \"right\",\n        value: this.state.ethGasStationAPIKey,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            ethGasStationAPIKey: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Gas Price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, __jsx(Input, {\n        label: \"WEI\",\n        labelPosition: \"right\",\n        value: this.state.gasPrice,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            gasPrice: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }\n      }))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, __jsx(Form.Input, {\n        label: \"Use Dynamic Gas Price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      }, __jsx(Checkbox, {\n        toggle: true,\n        checked: this.state.dynamicGasPrice,\n        onChange: function onChange() {\n          return _this2.setState(function (_ref) {\n            var dynamicGasPrice = _ref.dynamicGasPrice;\n            return {\n              dynamicGasPrice: !dynamicGasPrice\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }\n      })), __jsx(Form.Input, {\n        label: \"Receive Collateral as aTokens\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }\n      }, __jsx(Checkbox, {\n        toggle: true,\n        checked: this.state.receiveATokens,\n        onChange: function onChange() {\n          return _this2.setState(function (_ref2) {\n            var receiveATokens = _ref2.receiveATokens;\n            return {\n              receiveATokens: !receiveATokens\n            };\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }\n      }))), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }\n      }), __jsx(Button, {\n        primary: true,\n        labelPosition: \"left\",\n        icon: \"download\",\n        content: \"Save\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }\n      }), __jsx(Button, {\n        type: \"button\",\n        content: \"Upload Settings\",\n        labelPosition: \"left\",\n        icon: \"file\",\n        onClick: this.uploadSettings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      }), __jsx(\"input\", {\n        type: \"file\",\n        ref: this.hiddenFileInput,\n        onChange: this.readSettings,\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/Diddi/Documents/crypto/aave-liquidation/pages/settings.js"],"names":["React","Component","Form","Button","Input","Message","Checkbox","Layout","FileSaver","Settings","liquidatorAddress","addressToLiquidate","collateralAddress","repayTokenAddress","lpAddressProviderAddress","lpAddress","latestLpCoreAddress","wss","http","mnemonic","ethGasStationAPIKey","dynamicGasPrice","liquidationAmount","gasPrice","gasLimit","receiveATokens","errorMessage","event","preventDefault","console","log","state","configFile","blob","Blob","JSON","stringify","type","saveAs","updateSessionStorage","createRef","hiddenFileInput","current","click","fileUploaded","target","files","fr","FileReader","onload","e","result","parse","setState","formatted","readAsText","data","sessionStorage","setItem","getItem","onSubmit","value","uploadSettings","readSettings","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Button, Input, Message, Checkbox } from 'semantic-ui-react'\r\nimport Layout from '../components/Layout'\r\nimport FileSaver from 'file-saver'\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    liquidatorAddress: '',\r\n    addressToLiquidate: '',\r\n    collateralAddress: '',\r\n    repayTokenAddress: '',\r\n    lpAddressProviderAddress: '',\r\n    lpAddress: '',\r\n    latestLpCoreAddress: '',\r\n    wss: '',\r\n    http: '',\r\n    mnemonic: '',\r\n    ethGasStationAPIKey: '',\r\n    dynamicGasPrice: false,\r\n    liquidationAmount: '',\r\n    gasPrice: '',\r\n    gasLimit: '',\r\n    receiveATokens: false,\r\n    errorMessage: '',\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault()\r\n    console.log(this.state)\r\n\r\n    var configFile = {\r\n      liquidatorAddress: this.state.liquidatorAddress,\r\n      addressToLiquidate: this.state.addressToLiquidate,\r\n      collateralAddress: this.state.collateralAddress,\r\n      repayTokenAddress: this.state.repayTokenAddress,\r\n      lpAddressProviderAddress: this.state.lpAddressProviderAddress,\r\n      lpAddress: this.state.lpAddress,\r\n      latestLpCoreAddress: this.state.latestLpCoreAddress,\r\n      wss: this.state.wss,\r\n      http: this.state.http,\r\n      mnemonic: this.state.mnemonic,\r\n      ethGasStationAPIKey: this.state.ethGasStationAPIKey,\r\n      dynamicGasPrice: this.state.dynamicGasPrice,\r\n      liquidationAmount: this.state.liquidationAmount,\r\n      gasPrice: this.state.gasPrice,\r\n      gasLimit: this.state.gasLimit,\r\n      receiveATokens: this.state.receiveATokens,\r\n    }\r\n    var blob = new Blob([JSON.stringify(configFile)], {\r\n      type: 'application/json',\r\n    })\r\n    FileSaver.saveAs(blob, 'settings.json')\r\n    this.updateSessionStorage(this.state)\r\n  }\r\n\r\n  hiddenFileInput = React.createRef()\r\n  uploadSettings = () => {\r\n    this.hiddenFileInput.current.click()\r\n  }\r\n  readSettings = (event) => {\r\n    var fileUploaded = event.target.files[0]\r\n    var fr = new FileReader()\r\n    fr.onload = (e) => {\r\n      var result = JSON.parse(e.target.result)\r\n\r\n      this.setState({\r\n        liquidatorAddress: result.liquidatorAddress,\r\n        addressToLiquidate: result.addressToLiquidate,\r\n        collateralAddress: result.collateralAddress,\r\n        repayTokenAddress: result.repayTokenAddress,\r\n        lpAddressProviderAddress: result.lpAddressProviderAddress,\r\n        lpAddress: result.lpAddress,\r\n        latestLpCoreAddress: result.latestLpCoreAddress,\r\n        wss: result.wss,\r\n        http: result.http,\r\n        mnemonic: result.mnemonic,\r\n        ethGasStationAPIKey: result.ethGasStationAPIKey,\r\n        dynamicGasPrice: result.dynamicGasPrice,\r\n        liquidationAmount: result.liquidationAmount,\r\n        gasPrice: result.gasPrice,\r\n        gasLimit: result.gasLimit,\r\n        receiveATokens: result.receiveATokens,\r\n      })\r\n      this.updateSessionStorage(result)\r\n      var formatted = JSON.stringify(result, null, 2)\r\n      console.log(formatted)\r\n    }\r\n\r\n    fr.readAsText(fileUploaded)\r\n  }\r\n\r\n  updateSessionStorage = (data) => {\r\n    sessionStorage.setItem('liquidatorAddress', data.liquidatorAddress)\r\n    sessionStorage.setItem('addressToLiquidate', data.addressToLiquidate)\r\n    sessionStorage.setItem('collateralAddress', data.collateralAddress)\r\n    sessionStorage.setItem('repayTokenAddress', data.repayTokenAddress)\r\n    sessionStorage.setItem(\r\n      'lpAddressProviderAddress',\r\n      data.lpAddressProviderAddress\r\n    )\r\n    sessionStorage.setItem('lpAddress', data.lpAddress)\r\n    sessionStorage.setItem('latestLpCoreAddress', data.latestLpCoreAddress)\r\n    sessionStorage.setItem('wss', data.wss)\r\n    sessionStorage.setItem('http', data.http)\r\n    sessionStorage.setItem('mnemonic', data.mnemonic)\r\n    sessionStorage.setItem('ethGasStationAPIKey', data.ethGasStationAPIKey)\r\n    sessionStorage.setItem('dynamicGasPrice', data.dynamicGasPrice)\r\n    sessionStorage.setItem('liquidationAmount', data.liquidationAmount)\r\n    sessionStorage.setItem('gasPrice', data.gasPrice)\r\n    sessionStorage.setItem('gasLimit', data.gasLimit)\r\n    sessionStorage.setItem('receiveATokens', data.receiveATokens)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('MOUNTED YAI')\r\n    this.setState({\r\n      liquidatorAddress: sessionStorage.getItem('liquidatorAddress'),\r\n      addressToLiquidate: sessionStorage.getItem('addressToLiquidate'),\r\n      collateralAddress: sessionStorage.getItem('collateralAddress'),\r\n      repayTokenAddress: sessionStorage.getItem('repayTokenAddress'),\r\n      lpAddressProviderAddress: sessionStorage.getItem(\r\n        'lpAddressProviderAddress'\r\n      ),\r\n      lpAddress: sessionStorage.getItem('lpAddress'),\r\n      latestLpCoreAddress: sessionStorage.getItem('latestLpCoreAddress'),\r\n      wss: sessionStorage.getItem('wss'),\r\n      http: sessionStorage.getItem('http'),\r\n      mnemonic: sessionStorage.getItem('mnemonic'),\r\n      ethGasStationAPIKey: sessionStorage.getItem('ethGasStationAPIKey'),\r\n      dynamicGasPrice: sessionStorage.getItem('dynamicGasPrice') == 'true',\r\n      liquidationAmount: sessionStorage.getItem('liquidationAmount'),\r\n      gasPrice: sessionStorage.getItem('gasPrice'),\r\n      gasLimit: sessionStorage.getItem('gasLimit'),\r\n      receiveATokens: sessionStorage.getItem('receiveATokens') == 'true',\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h1>Liquidation Settings</h1>\r\n\r\n        <Form onSubmit={this.onSubmit} error={true}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Liquidator Address\">\r\n              <Input\r\n                error\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.liquidatorAddress}\r\n                onChange={(event) => {\r\n                  this.setState({ liquidatorAddress: event.target.value })\r\n                }}\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Address To Liquidate\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.addressToLiquidate}\r\n                onChange={(event) =>\r\n                  this.setState({ addressToLiquidate: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Collateral Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.collateralAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ collateralAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Repay Token Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.repayTokenAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ repayTokenAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"LendingPoolAddressProvider Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.lpAddressProviderAddress}\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    lpAddressProviderAddress: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"LendingPool Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.lpAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ lpAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"LendingPoolCore Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.latestLpCoreAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ latestLpCoreAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Infura WSS Address\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.wss}\r\n                onChange={(event) => this.setState({ wss: event.target.value })}\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Infura HTTP Address\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.http}\r\n                onChange={(event) =>\r\n                  this.setState({ http: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Wallet Mneumonic / Seed Phrase\">\r\n              <Input\r\n                label=\"String\"\r\n                labelPosition=\"right\"\r\n                value={this.state.mnemonic}\r\n                onChange={(event) =>\r\n                  this.setState({ mnemonic: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Liquidation Amount\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.liquidationAmount}\r\n                onChange={(event) =>\r\n                  this.setState({ liquidationAmount: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n            <Form.Input label=\"Gas Limit\">\r\n              <Input\r\n                label=\"WEI\"\r\n                labelPosition=\"right\"\r\n                value={this.state.gasLimit}\r\n                onChange={(event) =>\r\n                  this.setState({ gasLimit: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"ETH GAS STATION API KEY\">\r\n              <Input\r\n                label=\"String\"\r\n                labelPosition=\"right\"\r\n                value={this.state.ethGasStationAPIKey}\r\n                onChange={(event) =>\r\n                  this.setState({ ethGasStationAPIKey: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Gas Price\">\r\n              <Input\r\n                label=\"WEI\"\r\n                labelPosition=\"right\"\r\n                value={this.state.gasPrice}\r\n                onChange={(event) =>\r\n                  this.setState({ gasPrice: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input label=\"Use Dynamic Gas Price\">\r\n              <Checkbox\r\n                toggle\r\n                checked={this.state.dynamicGasPrice}\r\n                onChange={() =>\r\n                  this.setState(({ dynamicGasPrice }) => ({\r\n                    dynamicGasPrice: !dynamicGasPrice,\r\n                  }))\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Receive Collateral as aTokens\">\r\n              <Checkbox\r\n                toggle\r\n                checked={this.state.receiveATokens}\r\n                onChange={() =>\r\n                  this.setState(({ receiveATokens }) => ({\r\n                    receiveATokens: !receiveATokens,\r\n                  }))\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n          <Button primary labelPosition=\"left\" icon=\"download\" content=\"Save\" />\r\n\r\n          <Button\r\n            type=\"button\"\r\n            content=\"Upload Settings\"\r\n            labelPosition=\"left\"\r\n            icon=\"file\"\r\n            onClick={this.uploadSettings}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            ref={this.hiddenFileInput}\r\n            onChange={this.readSettings}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </Form>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n"]},"metadata":{},"sourceType":"module"}