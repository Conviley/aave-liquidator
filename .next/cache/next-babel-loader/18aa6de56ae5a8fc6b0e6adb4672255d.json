{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diddi\\\\Documents\\\\crypto\\\\aave-liquidation\\\\pages\\\\settings.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Checkbox } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport FileSaver from 'file-saver';\nimport { network } from '../src/web3.js';\nimport config from '../config.json';\nconst CONFIG_FILE_PATH = './config.json';\n\nclass Settings extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      liquidatorAddress: '',\n      addressToLiquidate: '',\n      collateralAddress: '',\n      repayTokenAddress: '',\n      lpAddressProviderAddress: '',\n      lpAddress: '',\n      latestLpCoreAddress: '',\n      wss: '',\n      http: '',\n      mnemonic: '',\n      ethGasStationAPIKey: '',\n      dynamicGasPrice: '',\n      liquidationAmount: '',\n      gasPrice: '',\n      gasLimit: '',\n      receiveATokens: '',\n      errorMessage: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", event => {\n      event.preventDefault();\n      console.log(this.state);\n      var configFile = {\n        liquidatorAddress: this.state.liquidatorAddress,\n        addressToLiquidate: this.state.addressToLiquidate,\n        collateralAddress: this.state.collateralAddress,\n        repayTokenAddress: this.state.repayTokenAddress,\n        lpAddressProviderAddress: this.state.lpAddressProviderAddress,\n        lpAddress: this.state.lpAddress,\n        latestLpCoreAddress: this.state.latestLpCoreAddress,\n        wss: this.state.wss,\n        http: this.state.http,\n        mnemonic: this.state.mnemonic,\n        ethGasStationAPIKey: this.state.ethGasStationAPIKey,\n        dynamicGasPrice: this.state.dynamicGasPrice,\n        liquidationAmount: this.state.liquidationAmount,\n        gasPrice: this.state.gasPrice,\n        gasLimit: this.state.gasLimit,\n        receiveATokens: this.state.receiveATokens\n      };\n      var blob = new Blob([JSON.stringify(configFile)], {\n        type: 'application/json'\n      });\n      FileSaver.saveAs(blob, 'settings.json');\n      sessionStorage.setItem('liquidatorAddress', this.state.liquidatorAddress);\n      sessionStorage.setItem('addressToLiquidate', this.state.addressToLiquidate);\n      sessionStorage.setItem('collateralAddress', this.state.collateralAddress);\n      sessionStorage.setItem('repayTokenAddress', this.state.repayTokenAddress);\n      sessionStorage.setItem('lpAddressProviderAddress', this.state.lpAddressProviderAddress);\n      sessionStorage.setItem('lpAddress', this.state.lpAddress);\n      sessionStorage.setItem('latestLpCoreAddress', this.state.latestLpCoreAddress);\n      sessionStorage.setItem('wss', this.state.wss);\n      sessionStorage.setItem('http', this.state.http);\n      sessionStorage.setItem('mnemonic', this.state.mnemonic);\n      sessionStorage.setItem('ethGasStationAPIKey', this.state.ethGasStationAPIKey);\n      sessionStorage.setItem('dynamicGasPrice', this.state.dynamicGasPrice);\n      sessionStorage.setItem('liquidationAmount', this.state.liquidationAmount);\n      sessionStorage.setItem('gasPrice', this.state.gasPrice);\n      sessionStorage.setItem('gasLimit', this.state.gasLimit);\n      sessionStorage.setItem('receiveATokens', this.state.receiveATokens);\n    });\n\n    _defineProperty(this, \"hiddenFileInput\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"uploadSettings\", () => {\n      this.hiddenFileInput.current.click();\n    });\n\n    _defineProperty(this, \"readSettings\", event => {\n      var fileUploaded = event.target.files[0];\n      var fr = new FileReader();\n\n      fr.onload = e => {\n        var result = JSON.parse(e.target.result);\n        this.setState({\n          liquidatorAddress: result.liquidatorAddress,\n          addressToLiquidate: result.addressToLiquidate,\n          collateralAddress: result.collateralAddress,\n          repayTokenAddress: result.repayTokenAddress,\n          lpAddressProviderAddress: result.lpAddressProviderAddress,\n          lpAddress: result.lpAddress,\n          latestLpCoreAddress: result.latestLpCoreAddress,\n          wss: result.wss,\n          http: result.http,\n          mnemonic: result.mnemonic,\n          ethGasStationAPIKey: result.ethGasStationAPIKey,\n          dynamicGasPrice: result.dynamicGasPrice,\n          liquidationAmount: result.liquidationAmount,\n          gasPrice: result.gasPrice,\n          gasLimit: result.gasLimit,\n          receiveATokens: result.receiveATokens\n        });\n        var formatted = JSON.stringify(result, null, 2);\n        console.log(formatted);\n      };\n\n      fr.readAsText(fileUploaded);\n    });\n  }\n\n  componentDidMount() {\n    console.log('MOUNTED YAI');\n    this.liquidatorAddress = sessionStorage.getItem('liquidatorAddress');\n    this.liquidatorAddress = sessionStorage.getItem('addressToLiquidate');\n    this.liquidatorAddress = sessionStorage.getItem('collateralAddress');\n    this.liquidatorAddress = sessionStorage.getItem('repayTokenAddress');\n    this.liquidatorAddress = sessionStorage.getItem('lpAddressProviderAddress');\n    this.liquidatorAddress = sessionStorage.getItem('lpAddress');\n    this.liquidatorAddress = sessionStorage.getItem('latestLpCoreAddress');\n    this.liquidatorAddress = sessionStorage.getItem('wss');\n    this.liquidatorAddress = sessionStorage.getItem('http');\n    this.liquidatorAddress = sessionStorage.getItem('mnemonic');\n    this.liquidatorAddress = sessionStorage.getItem('ethGasStationAPIKey');\n    this.liquidatorAddress = sessionStorage.getItem('dynamicGasPrice');\n    this.liquidatorAddress = sessionStorage.getItem('liquidationAmount');\n    this.liquidatorAddress = sessionStorage.getItem('gasPrice');\n    this.liquidatorAddress = sessionStorage.getItem('gasLimit');\n    this.liquidatorAddress = sessionStorage.getItem('receiveATokens');\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \"Liquidation Settings\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Input, {\n      label: \"Liquidator Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"HEX\",\n      labelPosition: \"right\",\n      value: this.state.liquidatorAddress,\n      onChange: event => this.setState({\n        liquidatorAddress: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Input, {\n      label: \"Address To Liquidate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"HEX\",\n      labelPosition: \"right\",\n      value: this.state.addressToLiquidate,\n      onChange: event => this.setState({\n        addressToLiquidate: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Input, {\n      label: \"Collateral Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"HEX\",\n      labelPosition: \"right\",\n      value: this.state.collateralAddress,\n      onChange: event => this.setState({\n        collateralAddress: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Input, {\n      label: \"Repay Token Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"HEX\",\n      labelPosition: \"right\",\n      value: this.state.repayTokenAddress,\n      onChange: event => this.setState({\n        repayTokenAddress: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Input, {\n      label: \"LendingPoolAddressProvider Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"HEX\",\n      labelPosition: \"right\",\n      value: this.state.lpAddressProviderAddress,\n      onChange: event => this.setState({\n        lpAddressProviderAddress: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Input, {\n      label: \"LendingPool Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"HEX\",\n      labelPosition: \"right\",\n      value: this.state.lpAddress,\n      onChange: event => this.setState({\n        lpAddress: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Input, {\n      label: \"LendingPoolCore Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"HEX\",\n      labelPosition: \"right\",\n      value: this.state.latestLpCoreAddress,\n      onChange: event => this.setState({\n        latestLpCoreAddress: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Input, {\n      label: \"Infura WSS Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"URL\",\n      labelPosition: \"right\",\n      value: this.state.wss,\n      onChange: event => this.setState({\n        wss: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Input, {\n      label: \"Infura HTTP Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"URL\",\n      labelPosition: \"right\",\n      value: this.state.http,\n      onChange: event => this.setState({\n        http: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Input, {\n      label: \"Wallet Mneumonic / Seed Phrase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"String\",\n      labelPosition: \"right\",\n      value: this.state.mnemonic,\n      onChange: event => this.setState({\n        mnemonic: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Input, {\n      label: \"Liquidation Amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"URL\",\n      labelPosition: \"right\",\n      value: this.state.liquidationAmount,\n      onChange: event => this.setState({\n        liquidationAmount: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Input, {\n      label: \"Gas Limit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"WEI\",\n      labelPosition: \"right\",\n      value: this.state.gasLimit,\n      onChange: event => this.setState({\n        gasLimit: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Input, {\n      label: \"ETH GAS STATION API KEY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"String\",\n      labelPosition: \"right\",\n      value: this.state.ethGasStationAPIKey,\n      onChange: event => this.setState({\n        ethGasStationAPIKey: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Input, {\n      label: \"Gas Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      label: \"WEI\",\n      labelPosition: \"right\",\n      value: this.state.gasPrice,\n      onChange: event => this.setState({\n        gasPrice: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Input, {\n      label: \"Use Dynamic Gas Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, __jsx(Checkbox, {\n      toggle: true,\n      checked: this.state.dynamicGasPrice,\n      onChange: () => this.setState(({\n        dynamicGasPrice\n      }) => ({\n        dynamicGasPrice: !dynamicGasPrice\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 15\n      }\n    })), __jsx(Form.Input, {\n      label: \"Receive Collateral as aTokens\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, __jsx(Checkbox, {\n      toggle: true,\n      checked: this.state.receiveATokens,\n      onChange: () => this.setState(({\n        receiveATokens\n      }) => ({\n        receiveATokens: !receiveATokens\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }))), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }\n    }), __jsx(Button, {\n      primary: true,\n      labelPosition: \"left\",\n      icon: \"download\",\n      content: \"Save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }\n    }), __jsx(Button, {\n      content: \"Choose File\",\n      labelPosition: \"left\",\n      icon: \"file\",\n      onClick: this.uploadSettings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    }), __jsx(\"input\", {\n      type: \"file\",\n      ref: this.hiddenFileInput,\n      onChange: this.readSettings,\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["C:/Users/Diddi/Documents/crypto/aave-liquidation/pages/settings.js"],"names":["React","Component","Form","Button","Input","Message","Checkbox","Layout","FileSaver","network","config","CONFIG_FILE_PATH","Settings","liquidatorAddress","addressToLiquidate","collateralAddress","repayTokenAddress","lpAddressProviderAddress","lpAddress","latestLpCoreAddress","wss","http","mnemonic","ethGasStationAPIKey","dynamicGasPrice","liquidationAmount","gasPrice","gasLimit","receiveATokens","errorMessage","event","preventDefault","console","log","state","configFile","blob","Blob","JSON","stringify","type","saveAs","sessionStorage","setItem","createRef","hiddenFileInput","current","click","fileUploaded","target","files","fr","FileReader","onload","e","result","parse","setState","formatted","readAsText","componentDidMount","getItem","render","onSubmit","value","uploadSettings","readSettings","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Button, Input, Message, Checkbox } from 'semantic-ui-react'\r\nimport Layout from '../components/Layout'\r\nimport FileSaver from 'file-saver'\r\nimport { network } from '../src/web3.js'\r\nimport config from '../config.json'\r\n\r\nconst CONFIG_FILE_PATH = './config.json'\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    liquidatorAddress: '',\r\n    addressToLiquidate: '',\r\n    collateralAddress: '',\r\n    repayTokenAddress: '',\r\n    lpAddressProviderAddress: '',\r\n    lpAddress: '',\r\n    latestLpCoreAddress: '',\r\n    wss: '',\r\n    http: '',\r\n    mnemonic: '',\r\n    ethGasStationAPIKey: '',\r\n    dynamicGasPrice: '',\r\n    liquidationAmount: '',\r\n    gasPrice: '',\r\n    gasLimit: '',\r\n    receiveATokens: '',\r\n    errorMessage: '',\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault()\r\n    console.log(this.state)\r\n\r\n    var configFile = {\r\n      liquidatorAddress: this.state.liquidatorAddress,\r\n      addressToLiquidate: this.state.addressToLiquidate,\r\n      collateralAddress: this.state.collateralAddress,\r\n      repayTokenAddress: this.state.repayTokenAddress,\r\n      lpAddressProviderAddress: this.state.lpAddressProviderAddress,\r\n      lpAddress: this.state.lpAddress,\r\n      latestLpCoreAddress: this.state.latestLpCoreAddress,\r\n      wss: this.state.wss,\r\n      http: this.state.http,\r\n      mnemonic: this.state.mnemonic,\r\n      ethGasStationAPIKey: this.state.ethGasStationAPIKey,\r\n      dynamicGasPrice: this.state.dynamicGasPrice,\r\n      liquidationAmount: this.state.liquidationAmount,\r\n      gasPrice: this.state.gasPrice,\r\n      gasLimit: this.state.gasLimit,\r\n      receiveATokens: this.state.receiveATokens,\r\n    }\r\n    var blob = new Blob([JSON.stringify(configFile)], {\r\n      type: 'application/json',\r\n    })\r\n    FileSaver.saveAs(blob, 'settings.json')\r\n\r\n    sessionStorage.setItem('liquidatorAddress', this.state.liquidatorAddress)\r\n    sessionStorage.setItem('addressToLiquidate', this.state.addressToLiquidate)\r\n    sessionStorage.setItem('collateralAddress', this.state.collateralAddress)\r\n    sessionStorage.setItem('repayTokenAddress', this.state.repayTokenAddress)\r\n    sessionStorage.setItem(\r\n      'lpAddressProviderAddress',\r\n      this.state.lpAddressProviderAddress\r\n    )\r\n    sessionStorage.setItem('lpAddress', this.state.lpAddress)\r\n    sessionStorage.setItem(\r\n      'latestLpCoreAddress',\r\n      this.state.latestLpCoreAddress\r\n    )\r\n    sessionStorage.setItem('wss', this.state.wss)\r\n    sessionStorage.setItem('http', this.state.http)\r\n    sessionStorage.setItem('mnemonic', this.state.mnemonic)\r\n    sessionStorage.setItem(\r\n      'ethGasStationAPIKey',\r\n      this.state.ethGasStationAPIKey\r\n    )\r\n    sessionStorage.setItem('dynamicGasPrice', this.state.dynamicGasPrice)\r\n    sessionStorage.setItem('liquidationAmount', this.state.liquidationAmount)\r\n    sessionStorage.setItem('gasPrice', this.state.gasPrice)\r\n    sessionStorage.setItem('gasLimit', this.state.gasLimit)\r\n    sessionStorage.setItem('receiveATokens', this.state.receiveATokens)\r\n  }\r\n\r\n  hiddenFileInput = React.createRef()\r\n  uploadSettings = () => {\r\n    this.hiddenFileInput.current.click()\r\n  }\r\n  readSettings = (event) => {\r\n    var fileUploaded = event.target.files[0]\r\n    var fr = new FileReader()\r\n    fr.onload = (e) => {\r\n      var result = JSON.parse(e.target.result)\r\n\r\n      this.setState({\r\n        liquidatorAddress: result.liquidatorAddress,\r\n        addressToLiquidate: result.addressToLiquidate,\r\n        collateralAddress: result.collateralAddress,\r\n        repayTokenAddress: result.repayTokenAddress,\r\n        lpAddressProviderAddress: result.lpAddressProviderAddress,\r\n        lpAddress: result.lpAddress,\r\n        latestLpCoreAddress: result.latestLpCoreAddress,\r\n        wss: result.wss,\r\n        http: result.http,\r\n        mnemonic: result.mnemonic,\r\n        ethGasStationAPIKey: result.ethGasStationAPIKey,\r\n        dynamicGasPrice: result.dynamicGasPrice,\r\n        liquidationAmount: result.liquidationAmount,\r\n        gasPrice: result.gasPrice,\r\n        gasLimit: result.gasLimit,\r\n        receiveATokens: result.receiveATokens,\r\n      })\r\n\r\n      var formatted = JSON.stringify(result, null, 2)\r\n      console.log(formatted)\r\n    }\r\n\r\n    fr.readAsText(fileUploaded)\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('MOUNTED YAI')\r\n    this.liquidatorAddress = sessionStorage.getItem('liquidatorAddress')\r\n    this.liquidatorAddress = sessionStorage.getItem('addressToLiquidate')\r\n    this.liquidatorAddress = sessionStorage.getItem('collateralAddress')\r\n    this.liquidatorAddress = sessionStorage.getItem('repayTokenAddress')\r\n    this.liquidatorAddress = sessionStorage.getItem('lpAddressProviderAddress')\r\n    this.liquidatorAddress = sessionStorage.getItem('lpAddress')\r\n    this.liquidatorAddress = sessionStorage.getItem('latestLpCoreAddress')\r\n    this.liquidatorAddress = sessionStorage.getItem('wss')\r\n    this.liquidatorAddress = sessionStorage.getItem('http')\r\n    this.liquidatorAddress = sessionStorage.getItem('mnemonic')\r\n    this.liquidatorAddress = sessionStorage.getItem('ethGasStationAPIKey')\r\n    this.liquidatorAddress = sessionStorage.getItem('dynamicGasPrice')\r\n    this.liquidatorAddress = sessionStorage.getItem('liquidationAmount')\r\n    this.liquidatorAddress = sessionStorage.getItem('gasPrice')\r\n    this.liquidatorAddress = sessionStorage.getItem('gasLimit')\r\n    this.liquidatorAddress = sessionStorage.getItem('receiveATokens')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h1>Liquidation Settings</h1>\r\n\r\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Liquidator Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.liquidatorAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ liquidatorAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Address To Liquidate\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.addressToLiquidate}\r\n                onChange={(event) =>\r\n                  this.setState({ addressToLiquidate: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Collateral Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.collateralAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ collateralAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Repay Token Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.repayTokenAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ repayTokenAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"LendingPoolAddressProvider Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.lpAddressProviderAddress}\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    lpAddressProviderAddress: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"LendingPool Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.lpAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ lpAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"LendingPoolCore Address\">\r\n              <Input\r\n                label=\"HEX\"\r\n                labelPosition=\"right\"\r\n                value={this.state.latestLpCoreAddress}\r\n                onChange={(event) =>\r\n                  this.setState({ latestLpCoreAddress: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Infura WSS Address\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.wss}\r\n                onChange={(event) => this.setState({ wss: event.target.value })}\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Infura HTTP Address\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.http}\r\n                onChange={(event) =>\r\n                  this.setState({ http: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Wallet Mneumonic / Seed Phrase\">\r\n              <Input\r\n                label=\"String\"\r\n                labelPosition=\"right\"\r\n                value={this.state.mnemonic}\r\n                onChange={(event) =>\r\n                  this.setState({ mnemonic: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"Liquidation Amount\">\r\n              <Input\r\n                label=\"URL\"\r\n                labelPosition=\"right\"\r\n                value={this.state.liquidationAmount}\r\n                onChange={(event) =>\r\n                  this.setState({ liquidationAmount: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n            <Form.Input label=\"Gas Limit\">\r\n              <Input\r\n                label=\"WEI\"\r\n                labelPosition=\"right\"\r\n                value={this.state.gasLimit}\r\n                onChange={(event) =>\r\n                  this.setState({ gasLimit: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input label=\"ETH GAS STATION API KEY\">\r\n              <Input\r\n                label=\"String\"\r\n                labelPosition=\"right\"\r\n                value={this.state.ethGasStationAPIKey}\r\n                onChange={(event) =>\r\n                  this.setState({ ethGasStationAPIKey: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Gas Price\">\r\n              <Input\r\n                label=\"WEI\"\r\n                labelPosition=\"right\"\r\n                value={this.state.gasPrice}\r\n                onChange={(event) =>\r\n                  this.setState({ gasPrice: event.target.value })\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input label=\"Use Dynamic Gas Price\">\r\n              <Checkbox\r\n                toggle\r\n                checked={this.state.dynamicGasPrice}\r\n                onChange={() =>\r\n                  this.setState(({ dynamicGasPrice }) => ({\r\n                    dynamicGasPrice: !dynamicGasPrice,\r\n                  }))\r\n                }\r\n              />\r\n            </Form.Input>\r\n\r\n            <Form.Input label=\"Receive Collateral as aTokens\">\r\n              <Checkbox\r\n                toggle\r\n                checked={this.state.receiveATokens}\r\n                onChange={() =>\r\n                  this.setState(({ receiveATokens }) => ({\r\n                    receiveATokens: !receiveATokens,\r\n                  }))\r\n                }\r\n              />\r\n            </Form.Input>\r\n          </Form.Group>\r\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n          <Button primary labelPosition=\"left\" icon=\"download\" content=\"Save\" />\r\n\r\n          <Button\r\n            content=\"Choose File\"\r\n            labelPosition=\"left\"\r\n            icon=\"file\"\r\n            onClick={this.uploadSettings}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            ref={this.hiddenFileInput}\r\n            onChange={this.readSettings}\r\n            style={{ display: 'none' }}\r\n          />\r\n        </Form>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n"]},"metadata":{},"sourceType":"module"}